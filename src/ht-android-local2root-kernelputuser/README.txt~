###### Contenuto ######

- put_user_exploit: contiene l'exploit
- suidext: contiene la nuova shell
- utils: librerie varie
- headers: include necessari per la compilazione


###### Configurazione #####

La configurazione della shell di root è descritta in headers/shell_params.h

 - SHELL_PORT: porta su cui il servizio root andrà in ascolto e su cui la parte client si connetterà
 - ROOT_SERVER: path in cui verrà copiato il binario avviato come servizio (di default l'avrei messo in /system/bin/event_handlerd)
 - ROOT_CLIENT: path in cui verrà copiato il binario da usare come client (solitamente /system/bin/rilcap)
 - INSTALL_SCRIPT: script di avvio al boot (/system/etc/install-recovery.sh)

Per avere i log a disposizione tramite logcat editare il file headers/log.h commentando opportunamente "#define DEBUG"


###### Compilazione ######

Compilando tramite ndk vengono creati tre file eseguibili distinti:

 - put_user_exploit: l'exploit
 - suidext: la nuova shell che comprende sia il daemon, sia il client
 - check_put_user_exploit: esegue un check sull'exploitabilità del device. Restituisce 1 in caso di exploitabilità, 0 altrimenti.

###### Esecuzione #######

*** EXPLOIT ***

Deve essere lanciato passando tre argomenti:

     - argv[1]: path assoluto alla nuova shell
     - argv[2]: path assoluto alla vecchia shell
     - argv[3]: path assoluto allo script d'installazione al boot

L'exploit installerà automaticamente la shell vecchia se possibile o la shell nuova in base alle rilevazioni effettuate sul device.
Se l'exploit ha successo /system/bin/rilcap sarà presente ed utilizzabile in modo trasparente.

*** SHELL ***

Per avviare la shell in modalità daemon eseguire "suidext --daemon".
Il client rispetta le specifiche della vecchia shell.
